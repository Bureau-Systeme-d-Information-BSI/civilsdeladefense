.container
  .row.pushed-top
    .col-12.col-md-10.col-lg-10.mx-auto
      = search_form_for [:admin, @q], class: 'filters job-offers-filtering' do |f|
        .form-group.input-group.filter.mb-0.border-bottom
          .input-group-prepend
            %span.input-group-text.bg-white.py-4
              = fa_icon('magnify')
          = text_field_tag :s, params[:s], placeholder: t('buttons.search')
        .d-flex
          .form-group.input-group.mb-0.border-bottom-3.border-success
            - grouped_options = grouped_nested_set_options(Category) {|i| "#{'   ' * i.level}#{i.name}" }
            = select_tag 'q[job_offer_category_id_eq]', option_groups_from_collection_for_select(grouped_options, :last, :first, :last, :first, params.dig(:q, :job_offer_category_id_eq)), include_blank: true, data: {placeholder: t('.profession'), 'allow-clear': true}, class: 'filter'
          .form-group.input-group.mb-0.border-bottom-3.border-cyan
            = select_tag 'q[job_offer_contract_type_id_eq]', options_from_collection_for_select(@contract_types, "id", "name", params.dig(:q, :job_offer_contract_type_id_eq)), include_blank: true, data: {placeholder: t('.contract'), 'allow-clear': true}, class: 'filter'
          .form-group.input-group.mb-0.border-bottom-3.border-danger
            = select_tag 'q[state_eq]', options_for_select(JobApplication.states.map {|k, v| [ JobApplication.human_attribute_name("state/#{k}"), v]}, params.dig(:q, :state_eq)), include_blank: true, data: {placeholder: 'Statut', 'allow-clear': true}, class: 'filter'
          .form-group.input-group.mb-0.border-bottom-3.border-orange
            = select_tag 'q[job_offer_employer_id_eq]', options_from_collection_for_select(@employers, "id", "name", params.dig(:q, :job_offer_employer_id_eq)), include_blank: true, data: {placeholder: t('.employer'), 'allow-clear': true}, class: 'filter'
        = submit_tag 'Rechercher', name: nil, class: 'd-none'
      .d-flex.justify-content-end.pt-1.invisible
        = spinner
