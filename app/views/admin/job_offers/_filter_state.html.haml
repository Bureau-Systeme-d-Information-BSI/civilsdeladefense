- filter_name = :state_in
- input_name = "q[#{filter_name}][]"
- ary = params.dig(:q, filter_name)  || []
.dropdown.dropdown-checks.form-group
  %button.form-control.dropdown-toggle.text-left.d-flex.align-items-center#dropdownState{type: 'button', data: {toggle: 'dropdown'}, aria: {haspopup: true, expanded: false}}
    Ã‰tat
    - if ary.any?
      = "(#{ary.size})"
  .dropdown-menu.dropdown-menu-right.allow-focus{aria: {labelledby: 'dropdownState'}}
    %ul
      - all_states = JobOffer.states.to_a.delete_if{|x| x.first == 'archived'}
      - all_states = JobOffer.states.to_a.select{|x| x.first == 'archived'} if controller.action_name == 'archived'
      - states = all_states.map {|k| [ JobOffer.human_attribute_name("state/#{k.first}"), k.last] }
      - for state in states
        - state_name = state.first
        - state_number = state.last
        - input_id = "state_#{state_number}"
        %li
          .form-check.form-check-inline.w-100
            - checked = ary.include?(state_number.to_s)
            = check_box_tag input_name, state_number, checked, class: 'form-check-input', id: input_id
            %label.form-check-label.text-truncate.d-block{for: input_id}= state_name
