- suffix = @job_offer.new_record? ? 'new' : 'edit'
- card_1_title = t(".card_1_title_#{ suffix }", job_offer_identifier: @job_offer.identifier)
- card_2_title = t('.card_2_title')
.container-fluid{data: { controller: "job-offer-management"}}
  .row
    .col-12.px-0
      = simple_form_for([:admin, @job_offer], data: {controller: "form-save trix-errors", trix_errors_model_name_value: "job_offer", trix_errors_inputs_value: @job_offer.errors.attribute_names, form_save_target: "form", action: "change->form-save#saveFormData submit->form-save#clearFormData"}) do |f|
        = f.error_notification
        - if @job_offer.errors.any?
          .alert.alert-danger.pt-0
            %ul.mb-0
              - @job_offer.errors.full_messages.each do |msg|
                %li= msg
        %nav.navbar.navbar-dark.bg-secondary.mb-5
          %span.navbar-text#step_1= card_1_title
        .container
          .row
            .col-12.col-md-10.mx-md-auto
              .card
                .card-header
                  .card-title= t('.card_1_1_title')
                .card-body
                  .form-inputs
                    .row
                      .col-12{class: f.object.new_record? ? nil : "col-md-9"}
                        = f.input :title, disabled: @job_offer.archived?
                      - if !f.object.new_record?
                        .col-12.col-md-3
                          = f.input :identifier, readonly: true
                    .row
                      .col-12.col-md-6
                        - grouped_options = nested_set_options(Category, @category) {|i| "#{'-' * i.level} #{i.name}" }
                        = f.association :category, collection: grouped_options, disabled: Category.all.select{|x| x.children.count != 0}.map(&:id), input_html: {class: 'custom-select'}
                      .col-12.col-md-3
                        - if current_administrator.admin?
                          - grouped_options = Employer.roots.map{|x| [x.name, x.children]}
                          = f.association :employer, collection: grouped_options, as: :grouped_select, group_method: :last, input_html: {class: 'custom-select'}
                        - else
                          - employers = [current_administrator.employer]
                          = f.association :employer, collection: employers.map{|x| [x.code, x.id]}, disabled: true, include_blank: false
                      .col-12.col-md-3
                        = f.association :bop
                    .row{data: { controller: 'autocomplete-city' }}
                      .col-12.col-md-6
                        = f.input :location, input_html: { 'data-autocomplete-city-target' => :location, 'data-action' => "click->autocomplete-city#search" }
                        = f.input :city, as: :hidden, input_html: { 'data-autocomplete-city-target' => :city }
                        = f.input :county, as: :hidden, input_html: { 'data-autocomplete-city-target' => :county }
                        = f.input :county_code, as: :hidden, input_html: { 'data-autocomplete-city-target' => :countyCode }
                        = f.input :country_code, as: :hidden, input_html: { 'data-autocomplete-city-target' => :countryCode }
                        = f.input :postcode, as: :hidden, input_html: { 'data-autocomplete-city-target' => :postcode }
                        = f.input :region, as: :hidden, input_html: { 'data-autocomplete-city-target' => :region }
                        .d-none
                          .autocomplete{ 'data-autocomplete-city-target' => :query }
                      - if current_administrator.admin?
                        .col-12.col-md-6
                          = f.input :spontaneous
                    = f.input :organization_description, as: :trix_editor_custom
                    = f.input :description, as: :trix_editor_custom
                    = f.input :required_profile, as: :trix_editor_custom
                    = f.input :recruitment_process, as: :trix_editor_custom
              .card.mt-5
                .card-header
                  .card-title= t('.card_1_2_title')
                .card-body
                  .form-inputs
                    .row
                      .col-12.col-md-4
                        - options = ContractType.all.map { |ct| [ct.name, ct.id, {data: {duration: ct.duration}}] }
                        = f.input :contract_type_id, collection: options, required: true
                      .col-12.col-md-4
                        = f.association :contract_duration
                      .col-12.col-md-4
                        = f.input :contract_start_on, as: :string, input_html: {class: 'default-cursor'}
                    .row
                      .col-12.col-md-4
                        = f.input :pep_value, input_html: { class: @job_offer.errors[:base].any? { _1.include?("PEP") } ? "is-invalid" : "" }
                      .col-12.col-md-4
                        = f.input :pep_date, as: :string, input_html: {class: 'default-cursor'}
                    .row
                      .col-12.col-md-4
                        = f.input :bne_value, input_html: { class: @job_offer.errors[:base].any? { _1.include?("BNE") } ? "is-invalid" : "" }
                      .col-12.col-md-4
                        = f.input :bne_date, as: :string, input_html: {class: 'default-cursor'}
                    .row
                      .col-12.col-md-4
                        = f.association :benefits, as: :check_boxes
                    .row
                      .col-12.col-md-4
                        = f.input :is_remote_possible, as: :radio_buttons
                      .col-12.col-md-4
                        = f.input :available_immediately, as: :radio_buttons
              .card.mt-5
                .card-header
                  .card-title= t('.card_1_3_title')
                .card-body
                  .form-inputs
                    .row
                      .col-12.col-md-6
                        .row
                          .col-12.col-md-6
                            = f.association :professional_category, input_html: {data: {remote: true, type: :json, url: admin_salary_ranges_url}}
                          .col-12.col-md-6
                            = f.association :study_level
                          .col-12.col-md-6
                            = f.association :experience_level, input_html: {data: {remote: true, type: :json, url: admin_salary_ranges_url}}
                          .col-12.col-md-6
                            = f.association :sector, input_html: {data: {remote: true, type: :json, url: admin_salary_ranges_url}}
                      .col-12.col-md-6.pl-md-5
                        .row
                          - salary_range = SalaryRange.where(professional_category_id: @job_offer.professional_category_id, experience_level_id: @job_offer.experience_level_id, sector_id: @job_offer.sector_id).first
                          .col-12
                            - estimate_monthly_salary_net = salary_range.try(:estimate_monthly_salary_net)
                            - hint = estimate_monthly_salary_net ? t('.estimate_monthly_salary_net_html', value: estimate_monthly_salary_net) : t('.estimate_monthly_salary_net_none_html')
                            = f.input :estimate_monthly_salary_net, disabled: true, hint: hint, input_html: {class: 'obviously-disabled'}
                          .col-12
                            - estimate_annual_salary_gross = salary_range.try(:estimate_annual_salary_gross)
                            - hint = estimate_annual_salary_gross ? t('.estimate_annual_salary_gross_html', value: estimate_annual_salary_gross) : t('.estimate_annual_salary_gross_none_html')
                            = f.input :estimate_annual_salary_gross, disabled: true, hint: hint, input_html: {class: 'obviously-disabled'}
        = render partial: "form_actors", locals: {f: f}
        = render partial: "form_submit", locals: {f: f}
