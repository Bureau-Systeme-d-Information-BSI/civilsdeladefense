- @page_title = t('.title')
- @active = controller.action_name == "index"
.card
  .card-header
    .card-title.align-items-center
      .float-right
        = link_to export_admin_settings_administrators_path(@permitted_params.merge(active: @active)), target: "_blank", class: 'btn btn-primary btn-raised ml-auto mt-2 mt-md-0 mb-0 mr-3' do
          = fa_icon 'arrow-down', class: 'mr-1'
          = Exporter
        = link_to [:new, :admin, :settings, :administrator], class: 'btn btn-primary btn-raised ml-auto mt-2 mt-md-0 mb-0' do
          = fa_icon 'plus', class: 'mr-1'
          = t('.add')
      = t('.card_title', count: @administrators_count)
  .card-body
    .d-flex
      %ul.nav.nav-tabs{role: :tablist}
        %li.nav-item.mr-3
          - klasses = %i(nav-link text-uppercase my-0)
          - klasses << :active if @active
          - url = [:admin, :settings, :root]
          = link_to t('.account_active', count: @administrators_active.size), url, class: klasses
        %li.nav-item.mr-3
          - klasses = %i(nav-link text-uppercase my-0)
          - klasses << :active unless @active
          - url = [:inactive, :admin, :settings, :administrators]
          = link_to t('.account_inactive', count: @administrators_inactive.size), url, class: klasses
  - url = @active ? [:admin, :settings, @q] : [:inactive, :admin, :settings, @q]
  = search_form_for url, wrapper: :inline_form, html: { class: 'form-inline auto-submit' }, builder: SimpleForm::FormBuilder do |f|
    %table.table.table-hover.mb-0.mt-3
      %thead
        %tr
          %th
            = t('.table.photo')
          %th
            = sort_link(@q, :last_name) do
              = t('.table.name')
          %th
            = t('.table.employer')
          %th
            = t('.table.role')
          %th
            = sort_link(@q, :created_at) do
              = t('.table.created_at')
          %th{style: "width: 70px;"}
        %tr
          %td
          %td
            = f.input :first_name_or_last_name_or_email_cont, as: :string, label: false, input_html: {class: 'w-100'}
          %td
            = f.input :employer_id_eq, collection: Employer.all.map{|e| [e.name.truncate(10, separator: 'â€¦'), e.id]}, label: false
          %td
            = f.input :role_eq, collection: Administrator.roles.map{|x,y| [Administrator.human_attribute_name("role.#{ x }"), y]}, label: false, input_html: {class: 'w-100'}
          %td
          %td
      %tbody
        = render @administrators
