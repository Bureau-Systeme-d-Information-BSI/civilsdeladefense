-# frozen_string_literal: true
= simple_form_for(@job_application, url: [:send_application, @job_offer], method: :post, remote: true, html: {data: {type: :json}}) do |f|
  .form-inputs.mt-3
    = f.error_notification
    = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
    %h2.h5.mb-3.text-dark-gray= t('.general_informations')
    .row
      .col-12.col-md-6
        = f.input :first_name
      .col-12.col-md-6
        = f.input :last_name
    .row
      .col-12.col-md-6
        = f.input :current_position
    .row
      .col-12.col-md-6
        = f.input :phone
    .row
      .col-12.col-md-6
        = f.input :address_1
      .col-12.col-md-6
        = f.input :address_2
    .row
      .col-12.col-md-6
        = f.input :city
      .col-12.col-md-6
        .row
          .col-12.col-md-6
            = f.input :postal_code
          .col-12.col-md-6
            = f.input :country, priority: [ "FR" ]
    - unless user_signed_in?
      .row
        .col-12.col-md-6
          = f.simple_fields_for :user do |user_form|
            = user_form.label :photo, required: false
            = user_form.input :photo, label: t('buttons.choose_file'), wrapper: :custom_file_without_label

    %h2.h5.mt-4.mb-3.text-dark-gray= t('.your_profile')
    - job_application_files = @job_application.job_application_files.to_a
    - current_state = JobApplication.states[@job_application.state]
    - job_application_file_types = JobApplicationFileType.where(by_default: true).where("from_state <= ?", current_state).where(kind: %i(applicant_provided template)).all
    - job_application_file_types.each do |job_application_file_type, index|
      - job_application_file = job_application_files.detect{|x| x.job_application_file_type == job_application_file_type}
      - job_application_file ||= @job_application.job_application_files.build job_application_file_type: job_application_file_type
      .row
        .col-12.col-md-6
          = f.simple_fields_for :job_application_files, job_application_file, input_html: {placeholder: false, required: true} do |file_form|
            = file_form.hidden_field :job_application_file_type_id
            = file_form.label job_application_file_type.name, required: true
            = file_form.input :content, label: t('buttons.choose_file'), wrapper: :custom_file_without_label

    %h2.h5.mt-4.mb-3.text-dark-gray= t('.your_internet_presence')
    .row
      .col-12
        = f.input :website_url, required: false

    - unless user_signed_in?
      %h2.h5.mt-4.mb-3.text-dark-gray= t('.your_account_creation')
      = f.simple_fields_for :user, input_html: {placeholder: false, required: true} do |user_form|
        .row
          .col-12.col-md-6
            = user_form.input :email, required: true
        .row
          .col-12.col-md-6
            = user_form.input :password, required: true
          .col-12.col-md-6
            = user_form.input :password_confirmation, required: true

    .row.mt-4.mb-3
      .col-12
        = f.input :terms_of_service, as: :boolean, label: t("simple_form.labels.job_application.terms_of_service", link: privacy_url).html_safe, label_html: { class: 'ml-2' }
        = f.input :certify_majority, as: :boolean, label_html: { class: 'ml-2' }
        = f.invisible_captcha :subtitle

  .form-actions.text-center.mt-md-4
    = button_tag(type: 'submit', class: 'btn btn-primary btn-raised btn-lg d-none d-md-inline mb-0') do
      = t('helpers.submit.job_application.save')
      = fa_icon('send', class: 'ml-1')
    = button_tag(type: 'submit', class: 'btn btn-primary btn-raised d-md-none mb-0') do
      = t('helpers.submit.job_application.save')
      = fa_icon('send', class: 'ml-1')
    .d-flex.justify-content-end.pt-1.invisible.spinner
      = spinner
