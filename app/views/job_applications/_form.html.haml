-# frozen_string_literal: true
- profile = @job_application.profile
-# Hide button until solution for CORS error is found
-# - unless user_signed_in?
-#   = render "devise/shared/france_connect"
= simple_form_for(@job_application, url: [:send_application, @job_offer], method: :post) do |f|
  .form-inputs.mt-3
    = f.error_notification
    = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
    %h2.rf-h3= t('.general_informations')
    = f.simple_fields_for :user do |user_form|
      = user_form.input :first_name, readonly: user_signed_in?
      = user_form.input :last_name, readonly: user_signed_in?
      = user_form.input :current_position, required: true
      = user_form.input :phone, required: true
    - unless user_signed_in?
      = f.simple_fields_for :user do |user_form|
        = user_form.label :photo, required: false
        = user_form.input :photo, label: t('buttons.choose_file'), wrapper: :custom_file_without_label

    %h2.rf-h3= t('.your_profile')
    - job_application_files = @job_application.job_application_files.to_a
    - current_state = JobApplication.states[@job_application.state]
    - job_application_file_types = JobApplicationFileType.where(by_default: true).where("from_state <= ?", current_state).where(kind: %i(applicant_provided template)).all
    - job_application_file_types.each do |job_application_file_type, index|
      - job_application_file = job_application_files.detect{|x| x.job_application_file_type == job_application_file_type}
      - job_application_file ||= @job_application.job_application_files.build job_application_file_type: job_application_file_type
      = f.simple_fields_for :job_application_files, job_application_file, input_html: {placeholder: false, required: true} do |file_form|
        = file_form.hidden_field :job_application_file_type_id
        = file_form.label job_application_file_type.name, required: true, class: 'rf-label'
        = file_form.input :content, label: t('buttons.choose_file'), wrapper: :custom_file_without_label

    %h2.rf-h3= t('.your_internet_presence')
    = f.simple_fields_for :user do |user_form|
      = user_form.input :website_url, required: false

    - unless user_signed_in?
      %h2.rf-h3= t('.your_account_creation')
      = f.simple_fields_for :user, input_html: {placeholder: false, required: true} do |user_form|
        = user_form.input :email, required: true
        = user_form.input :password, required: true
        = user_form.input :password_confirmation, required: true
        = user_form.input :terms_of_service, as: :boolean, label: tos_acceptance_text
        = user_form.input :certify_majority, as: :boolean
    = f.invisible_captcha :subtitle

  .rf-input-group.rf-grid-row.rf-grid-row--center.rf-mt-6w
    = button_tag(type: 'submit', class: 'rf-btn rf-btn--lg') do
      = t('helpers.submit.job_application.save')
    .d-flex.justify-content-end.pt-1.invisible.spinner
      = spinner
